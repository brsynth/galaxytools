<tool id="icfree_plates_generator" name="iCFree plates generator module" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.09">
    <description>Generates a list of Echo-compatible source and destination plates according a set of samples to test</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio>
        <regex match="WARNING" level="warning" />
        <regex match="ERROR" level="fatal" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[
        python -m icfree.plates_generator
            '$cfps_parameters_file'
            '$sampling_file'
            --sample_volume '$adv.sample_volume'
            --source_plate_dead_volume '$adv.source_plate_dead_volume'
            --dest_plate_dead_volume '$adv.dest_plate_dead_volume'
            --dest-starting_well '$adv.dest-starting_well'
            --src-starting_well '$adv.src-starting_well'
            --output-format '$adv.output-format'
            --nplicate '$adv.nplicate'
            --keep-nil-vol '$adv.keep-nil-vol'
            --source_plate_well_capacity '$adv.source_plate_well_capacity'
            --dest_plate_well_capacity '$adv.dest_plate_well_capacity'
            --optimize-well-volumes '$adv.optimize-well-volumes'
            --plate-dimensions '$adv.plate-dimensions'
    ]]></command>
    <inputs>
        <param name="cfps_parameters_file" type="data" format="tabular" label="Cell-Free System Pameters" />
        <param name="sampling_file" type="data" format="csv" label="Cell-Free System Pameters Concentrations" />
        <section name="adv" title="Advanced Options" expanded="false">
            <param argument="sample_volume" type="integer" value="1000" label="Final sample volume in each well in nL" />
            <param argument="source_plate_dead_volume" type="integer" value="15000" label="dead volume to add in the source plate in nL"/>
            <param argument="dest_plate_dead_volume" type="integer" value="15000" label="dead volume to add in the destination plate in nL"/>
            <param argument="dest-starting_well" type="text" value="A1" label="starter well of destination plate to begin filling the 384 well-plate"/>
            <param argument="src-starting_well" type="text" value="A1" label="starter well of source plate to begin filling the 384 well-plate" />
            <param argument="output-format" type="data" format="csv" label="Output file format"/>
            <param argument="nplicate" type="integer" value="3" label="numbers of copies of volume sets"/>
            <param argument="keep-nil-vol" type="boolean" truevalue="keep-nil-vol" falsevalue="" checked="ture" label="Keep nil volumes in instructions or not"/>
            <param argument="source_plate_well_capacity" type="integer" value="60000" label="Maximum volume capacity of the source plate in nL" />
            <param argument="dest_plate_well_capacity" type="integer" value="60000" label="Maximum volume capacity of the dest plate in nL" />
            <param argument="optimize-well-volumes" label="Save volumes in source plate for all factors"/>
            <param argument="plate-dimensions" label="Dimensions of plate separated by a 'x'"/>
        </section>
    </inputs>
    <outputs>
        <data name="source_plate" format="json" label="Source plate(s) description(s)" />
        <data name="destination_plate" format="json" label="Destination plate(s) description(s)" />
        <data name="volumes_summary" format="csv" label="Pameters volumes summary" />
    </outputs>
    <tests>
        <tests>
            <!-- test 1: check if identical outputs are produced with default parameters  -->
        </tests>
    </tests>
    <help><![CDATA[
Plates Generator
=================
This module generates a list of source and destination plates according to the set of samples to test.

Input
-----
* **CFPS Parameters File**\ : The first column is the parameter (or factor) names.
The second column is the maxValue of the parameter that will be used in the sampling.
The third column is the concnetration of the stock.
The fourth column is the deadVolume of the parameter. This is used to calculate the volume of the parameter that will not be pipetted by the robot (because of viscosity).
The fifth column is the specific ratios we want to have for this parameter. If nothing defined, then take ratios given in program options. If one single number is given, then take this number as a const value.

* Sampling File**\ : CSV file with the sampling values for each parameter

Advanced Options:
-----------------
* **Sample Volume**\ : Final sample volume in each well in nL (default: 10000)
* **Source Plate Dead Volume**\ : dead volume to add in the source plate in nL (default: 15000)
* **Destination Plate Dead Volume**\ : dead volume to add in the dest plate in nL (default: 15000)
* **Destination Starting Well**\ : starter well of destination plate to begin filling the 384 well-plate. (default: A1)
* **Source Starting Well**\ : starter well of source plate to begin filling the 384 well-plate. (default: A1)
* **Output Format**\ : Output file format for wells file (default: csv)
* **Number of replicate**\ : Numbers of copies of volume sets (default: 3)
* **Keep nil volumes**\ : Keep nil volumes in instructions or not (default: yes)
* **Source Plate Well Capacity**\ : Maximum volume capacity of the source plate in nL (default: 60000)
* **Destiantion Plate Well Capacity**\ : Maximum volume capacity of the dest plate in nL (default: 60000)
* **Optimize Well Volumes**\ : Save volumes in source plate for all factors. It may trigger more volume pipetting warnings. If list of factors is given (separated by blanks), save: only for these ones (default: []).
* **Plate Dimensions**\ : Dimensions of plate separated by a 'x', e.g. nb_rows x nb_cols (default: 16x24).

Output
------
* **source_plate.json**\ : describe the source plate(s)
* **destination_plate.json**\ : describe the destination plate(s)
* **volumes_summary.tsv**\ : contains the summary of parameters volumes

Project Links
-------------
* `GitHub <https://github.com/brsynth/icfree-ml/tree/main/icfree/plates_generator>`_

License
-------
* `MIT <https://github.com/brsynth/icfree-ml/blob/main/LICENSE>`_

    ]]></help>
    <creator>
        <person givenName="Yorgo" familyName="El Moubayed" email="yorgo.el-moubayed@inrae.fr" />
    </creator>
    <citations>
    </citations>
</tool>




