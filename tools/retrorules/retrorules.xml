<tool id="retrorules" name="RetroRules" version="1.0+galaxy2" profile="21.09" license="MIT">
    <description>Querying the RetroRules REST API</description>
    <requirements>
        <requirement type="package" version="2">requests</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$__tool_directory__/'query.py
        #if str($cond_src.from_src) == 'from_templates' or str($cond_src.from_src) == 'from_templates_count'
            #if str($cond_src.from_src) == 'from_templates'
                templates
            #elif str($cond_src.from_src) == 'from_templates_count'
                templates-count
            #end if
            --input-smarts-str '$cond_src.smarts'
            #set template_ids = []
            #for $x in $cond_src.rep_template_ids
                #silent template_ids.append(str($x.template_id))
            #end for
            #set template_id = ' '.join($template_ids)
            --input-template-ids-str $template_id
            #set reaction_ids = []
            #for $x in $cond_src.rep_reaction_ids
                #silent reaction_ids.append(str($x.reaction_id))
            #end for
            #set reaction_id = ' '.join($reaction_ids)
            --input-reaction-ids-str $reaction_id
            --input-datasets-str '$cond_src.from_datasets'
            --input-chemical-domain-str '$cond_src.from_chemical_domain'
            #if str($cond_src.ec_number) != ''
                --input-ec-number-str '$cond_src.ec_number'
            #end if
            #if str($cond_src.min_radius) != ''
                --input-min-radius-int '$cond_src.min_radius'
            #end if
            --input-valid-str '$cond_src.from_valid'
            #set dedup = 'false'
            #if str($cond_src.dedup) == 'true'
                #set dedup = 'true'
            #end if
            --input-dedup-str $dedup
            #if str($cond_src.from_src) == 'from_templates'
                #if str($cond_src.limit) != ''
                    --input-limit-int '$cond_src.limit'
                #end if
                #if str($cond_src.offset) != ''
                    --input-offset-int '$cond_src.offset'
                #end if
            #end if
        #elif str($cond_src.from_src) == 'from_templates_summary'
            templates-summary
            --input-template-id-str '$cond_src.template_id'
        #elif str($cond_src.from_src) == 'from_templates_sources'
            templates-sources
            --input-template-id-str '$cond_src.template_id'
        #end if
        --output-data-json '$output_json'
    ]]></command>
    <inputs>
        <conditional name="cond_src">
            <param name="from_src" type="select" multiple="False" label="Select entry point">
                <option value="from_templates" selected="True">Search templates</option>
                <option value="from_templates_summary">Summarize a template</option>
                <option value="from_templates_sources">List source reactions for a template</option>
                <option value="from_templates_count">Count templates</option>
            </param>
            <when value="from_templates">
                <param name="smarts" type="text" value="" label="Exact SMARTS">
                    <sanitizer sanitize="false" />
                </param>
                <repeat name="rep_template_ids" title="Template">
                    <param name="template_id" type="text" label="ID">
                        <validator type="empty_field" message="Not empty" />
                    </param>
                </repeat>
                <repeat name="rep_reaction_ids" title="Reaction">
                    <param name="reaction_id" type="text" label="ID">
                        <validator type="empty_field" message="Not empty" />
                    </param>
                </repeat>
                <param name="from_datasets" type="select" multiple="False"
                    label="Select a specific database">
                    <option value="any" selected="True">Any</option>
                    <option value="metanetx">MetaNetX</option>
                    <option value="rhea">Rhea</option>
                    <option value="uspto">USPTO</option>
                </param>
                <param name="from_chemical_domain" type="select" multiple="False"
                    label="Chemical domain">
                    <option value="any" selected="True">Any</option>
                    <option value="biochem">Biochem</option>
                    <option value="orgchem">Orgchem</option>
                </param>
                <param name="ec_number" type="text" value="" label="EC number to filter templates" />
                <param name="min_radius" type="integer" min="0" max="10" optional="True"
                    label="Single radius filter" />
                <param name="from_valid" type="select" multiple="False" label="Filter by validity">
                    <option value="true" selected="True">True</option>
                    <option value="any">Any</option>
                    <option value="false">False</option>
                </param>
                <param name="dedup" type="boolean" checked="True"
                    label="By default deduplicated templates are returned" />
                <param name="limit" type="integer" min="1" optional="True"
                    label="Limit number of returned templates" />
                <param name="offset" type="integer" min="0" optional="True"
                    label="Offset for pagination" />
            </when>
            <when value="from_templates_summary">
                <param name="template_id" type="text" label="Template ID">
                    <validator type="empty_field" message="Template ID is required" />
                </param>
            </when>
            <when value="from_templates_sources">
                <param name="template_id" type="text" label="Template ID">
                    <validator type="empty_field" message="Template ID is required" />
                </param>
            </when>
            <when value="from_templates_count">
                <param name="smarts" type="text" value="" label="Exact SMARTS">
                    <sanitizer sanitize="false" />
                </param>
                <repeat name="rep_template_ids" title="Template">
                    <param name="template_id" type="text" label="ID">
                        <validator type="empty_field" message="Not empty" />
                    </param>
                </repeat>
                <repeat name="rep_reaction_ids" title="Reaction">
                    <param name="reaction_id" type="text" label="ID">
                        <validator type="empty_field" message="Not empty" />
                    </param>
                </repeat>
                <param name="from_datasets" type="select" multiple="False"
                    label="Select a specific database">
                    <option value="any" selected="True">Any</option>
                    <option value="metanetx">MetaNetX</option>
                    <option value="rhea">Rhea</option>
                    <option value="uspto">USPTO</option>
                </param>
                <param name="from_chemical_domain" type="select" multiple="False"
                    label="Chemical domain">
                    <option value="any" selected="True">Any</option>
                    <option value="biochem">Biochem</option>
                    <option value="orgchem">Orgchem</option>
                </param>
                <param name="ec_number" type="text" value="" label="EC number to filter templates" />
                <param name="min_radius" type="integer" min="0" max="10" optional="True"
                    label="Single radius filter" />
                <param name="from_valid" type="select" multiple="False" label="Filter by validity">
                    <option value="true" selected="True">True</option>
                    <option value="any">Any</option>
                    <option value="false">False</option>
                </param>
                <param name="dedup" type="boolean" checked="True"
                    label="By default deduplicated templates are returned" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output_json" format="json" label="${tool.name}" />
    </outputs>
    <tests>
        <!-- Templates -->
        <test>
            <conditional name="cond_src">
                <param name="from_src" value="from_templates" />
                <param name="smarts" value="[O]-[C](=[O])" />
                <param name="limit" value="5" />
            </conditional>
            <output name="output_json" md5="0e4a782a2868c4b85a96f7c1d4ecaef8" />
        </test>
        <!-- Templates summary -->
        <test>
            <conditional name="cond_src">
                <param name="from_src" value="from_templates_summary" />
                <param name="template_id" value="RR:03-27BC85-19184A-A71018" />
            </conditional>
            <output name="output_json" md5="8cde1ac45b324c9893f70254587feb30" />
        </test>
        <!-- Templates sources -->
        <test>
            <conditional name="cond_src">
                <param name="from_src" value="from_templates_sources" />
                <param name="template_id" value="RR:03-27BC85-19184A-A71018" />
            </conditional>
            <output name="output_json" md5="33768abfc48aa896bfdfb736a3001950" />
        </test>
        <!-- Templates count -->
        <test>
            <conditional name="cond_src">
                <param name="from_src" value="from_templates_count" />
                <param name="smarts" value="[O]-[C](=[O])" />
            </conditional>
            <output name="output_json" md5="375fc61f8b47a81687dc567d3501f921" />
        </test>
    </tests>
    <help><![CDATA[
RetroRules
==========

Querying the `RetroRules <https://retrorules.org/>`_ REST API
    ]]></help>
    <creator>
        <organization name="BioRetroSynth" url="https://github.com/brsynth" />
    </creator>
    <citations>
        <citation type="doi">10.1093/nar/gky940</citation>
    </citations>
</tool>