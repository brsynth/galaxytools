name: PullRequest

on:
  pull_request:
    types:
      - edited
      - opened
      - reopened
  pull_request_target:
    types:
      - closed

jobs:

  list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      process: ${{ steps.set-matrix.outputs.process }}
    steps:
      - name: 'Select modified files'
        id: files
        uses: jitterbit/get-changed-files@v1
      - name: 'List repos'
        id: set-matrix
        run: |
          echo "list file modified"
          echo ${{ steps.files.outputs.all }}
          matrix=$(jq -s -c '.[] | | map(select(contains("tools"))) | map(split("/")[2]) | sort | unique' <<< ${{ steps.files.outputs.all }})
          echo "matrix=$matrix" >> "${GITHUB_OUTPUT}"
          process=true
          [[ ${#matrix} -lt 3 ]] && process=false
          echo "process=$process" >> "${GITHUB_OUTPUT}"

  test:
    needs: list
    if: ${{ needs.list.outputs.process }} == true
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        repo: ${{ fromJson(needs.list.outputs.matrix) }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          ref: main
      - name: "Setup python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            env/requirements.txt
      - name: 'Install packages'
        run: |
          pip install -r env/requirements.txt
      - name: 'Prepare output'
        run: |
          mkdir -p "log/${{ matrix.repo }}"
      - name: 'Wrapper Lint'
        run: |
          planemo lint --urls --doi "tools/${{ matrix.repo }}"
      - name: 'Shed lint'
        run: |
          ./scripts/shed_lint.py -i "tools/${{ matrix.repo }}"
      - name: 'Test tool'
        run: |
          mkdir -p "log/${{ matrix.repo }}"
          planemo test \
            --biocontainers \
            --no_dependency_resolution \
            --no_conda_auto_init \
            --galaxy_source https://github.com/galaxyproject/galaxy \
            --galaxy_branch release_22.05 \
            --galaxy_python_version 3.7 \
            --test_timeout 900 \
            --job_output_files "log/${{ matrix.repo }}" \
            "tools/${{ matrix.repo }}"

  shed:
    needs: repo
    if: github.event.pull_request.merged == true && ${{ needs.list.outputs.process }} == true
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      max-parallel: 1
      matrix:
        repo: ${{ fromJson(needs.list.outputs.matrix) }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: "Setup python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            env/requirements.txt
      - name: 'Install packages'
        run: |
          pip install -r env/requirements.txt
      - name: 'Test ToolShed'
        run: |
          planemo shed_update --check_diff --shed_target testtoolshed --shed_key "${{ secrets.TESTTOOLSHED }}" "tools/${{ matrix.repo }}"
      - name: 'Main ToolShed'
        run: |
          planemo shed_update --check_diff --shed_target toolshed --shed_key "${{ secrets.TOOLSHED }}" "tools/${{ matrix.repo }}"
