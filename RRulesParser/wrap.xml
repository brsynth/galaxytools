<tool id="rrparser" name="RRules Parser" version="2.4.6">
    <description>Reaction Rules Parser</description>
    <requirements>
        <requirement type="package" version="2.4.6">rrparser</requirement>
    </requirements>
    <stdio>
        <regex match="WARNING:" level="warning" />
	    <regex match="ERROR:" level="fatal" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[
        python -m rrparser
        #if str($rules.type) != "other":
            retrorules
            --rule-type '$rules.type'
        #else:
            '$rules.file'
            --input-format '$rules.format'
        #end if
        --diameters '$diameters'
        --output-format csv
        #if str($compress) == "true":
            --outfile '$out_rules'.csv.gz ;
            mv '$out_rules'.csv.gz '$out_rules'
        #else:
            --outfile '$out_rules'
        #end if
    ]]></command>
    <inputs>
        <conditional name="rules">
            <param name="type" optional="True" type="select" label="Rule Type" help="">
                <option value="retro" selected="True">RetroRules (retro)</option>
                <option value="forward">RetroRules (forward)</option>
                <option value="all">RetroRules (all)</option>
                <option value="other">Other reaction rules...</option>
            </param>
            <when value="other">
                <param name="file" optional="False" type="data" format="csv" label="Rules File"/>
                <param name="format" optional="False" type="select" label="File format">
                    <option value="csv" selected="True">csv</option>
                    <option value="tsv">tsv</option>
                </param>
            </when>
            <when value="retro|forward|all">
                <param name="file" optional="True" type="data" format="csv" label="Rules File"/>
            </when>
        </conditional>
        <param name="diameters" type="select" display="checkboxes" multiple="True" label="Select the diameters of the reactions rules">
            <option selected="true" value="2">2</option>
            <option selected="true" value="4">4</option>
            <option selected="true" value="6">6</option>
            <option selected="true" value="8">8</option>
            <option selected="true" value="10">10</option>
            <option selected="true" value="12">12</option>
            <option selected="true" value="14">14</option>
            <option selected="true" value="16">16</option>
        </param>
        <param name="compress" type="boolean" display="checkboxes" label="Compress output" />
    </inputs>
    <outputs>
        <data name="out_rules" format="csv" label="${tool.name}(${rules.type}, d=$diameters)" >
            <change_format>
                <when input="compress" value="true" format="csv.gz"/>
            </change_format>
        </data>
    </outputs>
    <tests>
        <test>
        <!-- test 1: check if identical outputs are produced with compress option -->
            <param name="compress" value="True" />
            <output name="out_rules" file="rules.csv.gz" compare="diff" decompress="True"/>
        </test>
    </tests>
    <help><![CDATA[
RRulesParser
============

Retrieve the reaction rules from `RetroRules <https://retrorules.org/>`_

Input
-----

* **rules-file**: (string) Filename of reaction rules
* **input-format**: (string) Valid options: csv, tsv. Format of the input file
* **rule-type**: (string) Valid options: retro, forward, all. Return the rules that are in reverse, forward or both direction
* **diameters**: (integer list) Valid options: 2, 4, 6, 8, 10, 12, 14, 16. The diameter of the rules to return
* **outdir**: (string) Path where output files will be written
* **outfile**: (string) Path where output files will be written
* **output-format**: (string) Valid options: csv, tar.gz. Format of the returned file

Ouput
-----

* **output**: (string): Path of the output file. Either a compressed tar.gz (containing a csv) or csv list of reaction rules that are in a RetroPath2.0 friendly format


Version
-------

v2.4.5

Authors
-------

* **Thomas Duigou**
* Melchior du Lac
* Joan Hérisson

License
-------

This project is licensed under the MIT License - see the `LICENSE <LICENSE>`_ file for details

Acknowledgments
---------------

* Joan Hérisson

    ]]></help>
    <citations>
        <citation type="bibtex">@article{10.1093/nar/gky940,
        author = {Duigou, Thomas and du Lac, Melchior and Carbonell, Pablo and Faulon, Jean-Loup},
        title = "{RetroRules: a database of reaction rules for engineering biology}",
        journal = {Nucleic Acids Research},
        volume = {47},
        number = {D1},
        pages = {D1229-D1235},
        year = {2018},
        month = {10},
        abstract = "{RetroRules is a database of reaction rules for metabolic engineering (https://retrorules.org). Reaction rules are generic descriptions of chemical reactions that can be used in retrosynthesis workflows in order to enumerate all possible biosynthetic routes connecting a target molecule to its precursors. The use of such rules is becoming increasingly important in the context of synthetic biology applied to de novo pathway discovery and in systems biology to discover underground metabolism due to enzyme promiscuity. Here, we provide for the first time a complete set containing \\&gt;400 000 stereochemistry-aware reaction rules extracted from public databases and expressed in the community-standard SMARTS (SMIRKS) format, augmented by a rule representation at different levels of specificity (the atomic environment around the reaction center). Such numerous representations of reactions expand natural chemical diversity by predicting de novo reactions of promiscuous enzymes.}",
        issn = {0305-1048},
        doi = {10.1093/nar/gky940},
        url = {https://doi.org/10.1093/nar/gky940},
        eprint = {https://academic.oup.com/nar/article-pdf/47/D1/D1229/27436292/gky940.pdf},
        }
        </citation>
    </citations>
</tool>