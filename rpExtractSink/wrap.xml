<tool id="rpExtractSink" name="Sink from SBML" version="5.11.1">
    <description>Generate the RetroPath2.0 sink file from an SBML input</description>
    <requirements>
        <requirement type="package" version="5.11.1">rptools</requirement>
    </requirements>
    <stdio>
		<regex match="Could not retreive any species in the compartment" level="fatal" />
	</stdio>
    <command detect_errors="exit_code"><![CDATA[
        python -m rptools.rpextractsink
            $(input)
            '$sink'
            --compartment_id '$adv.compartment_id'
        #if str($adv.remove_dead_end) == "true":
            --remove_dead_end
        #end if
    ]]></command>
    <inputs>
        <param name="input" type="data" format="xml" optional="false" label="Strain" />
        <section name="adv" title="Advanced Options" expanded="false">
            <param name="compartment_id" type="text" value="c" label="SBML compartment ID" />
            <param name="remove_dead_end" type="boolean" checked="true" label="Remove dead-end metabolites using FVA evaluation?" />
        </section>
    </inputs>
    <outputs>
        <data name="sink" format="csv" label="${tool.name} - ${sbml_model.name}" />
    </outputs>
    <tests>
        <test>
        <!-- test 1: check if identical outputs are produced with iML1515 model input  -->
            <param name="input" value="iML1515" />
            <output name="sink" file="sink.csv" ftype="csv" compare="diff"/>
        </test>
    </tests>
    <help><![CDATA[

Sink from SBML
=================

Sink refers to the collection of chemical species used by the restrosynthesis algorithm of RetroPath2.0 to finish metabolic route exploration. This tool uses an SBML file of the desired chassis organism, parses all the molecules within a specified compartment (example: cytoplasm, Golgi apparatus, nucleus, etc) and uses its MIRIAM annotation to find their InChI structures. You can use "Remove dead-end metabolites using FVA evaluation? to conduct Flux Variability Analysis to remove metabolites that lack the requisite flux that would account for their production or consumption within the metabolic network.

In the advanced options, one can specify the compartment from which the tool will extract the chemical species. The default is MNXC3, the MetaNetX code for the cytoplasm. If the user wishes to upload an SBML file from another source, then this value must be changed.

The results are written to a RetroPath2.0 friendly CSV file format that can be used as sink input.


Input
-----

Required:

* **input_sbml**\ : (string) Path to the input SBML file

Advanced options:

* **remove_dead_end**\ : (boolean, default: True) Perform FVA evaluation to remove dead end metabolites
* **compartment_id**\ : (string, default: MNXC3) Specify the compartment from which to extract the sink molecules. The default are for MetaNetX files

Output
------

* **output_sink**\ : (string) Path to the output csv file


Project Links
---------------------

* `GitHub <https://github.com/brsynth/rptools>`_

Version
----------

5.9.2


Authors
-------


* **Melchior du Lac**
* Joan HÃ©risson

License
-------

`MIT <https://github.com/brsynth/rptools/blob/master/LICENSE>`_

Acknowledgments
---------------


* Thomas Duigou



    ]]></help>
    <citations>
        <citation type="bibtex">
@article{le2005minimum,
  title={Minimum information requested in the annotation of biochemical models (MIRIAM)},
  author={Le Nov{\`e}re, Nicolas and Finney, Andrew and Hucka, Michael and Bhalla, Upinder S and Campagne, Fabien and Collado-Vides, Julio and Crampin, Edmund J and Halstead, Matt and Klipp, Edda and Mendes, Pedro and others},
  journal={Nature biotechnology},
  volume={23},
  number={12},
  pages={1509--1515},
  year={2005},
  publisher={Nature Publishing Group}
}
        </citation>
        <citation type="bibtex">
@article{delepine2018retropath2,
  title={RetroPath2. 0: a retrosynthesis workflow for metabolic engineers},
  author={Del{\'e}pine, Baudoin and Duigou, Thomas and Carbonell, Pablo and Faulon, Jean-Loup},
  journal={Metabolic engineering},
  volume={45},
  pages={158--170},
  year={2018},
  publisher={Elsevier}}
        </citation>
        <citation type="bibtex">
@article{ebrahim2013cobrapy,
  title={COBRApy: COnstraints-based reconstruction and analysis for python},
  author={Ebrahim, Ali and Lerman, Joshua A and Palsson, Bernhard O and Hyduke, Daniel R},
  journal={BMC systems biology},
  volume={7},
  number={1},
  pages={74},
  year={2013},
  publisher={Springer}
}
        </citation>
        <citation type="bibtex">
@article{bornstein2008libsbml,
  title={LibSBML: an API library for SBML},
  author={Bornstein, Benjamin J and Keating, Sarah M and Jouraku, Akiya and Hucka, Michael},
  journal={Bioinformatics},
  volume={24},
  number={6},
  pages={880--881},
  year={2008},
  publisher={Oxford University Press}
}
        </citation>
    </citations>
</tool>